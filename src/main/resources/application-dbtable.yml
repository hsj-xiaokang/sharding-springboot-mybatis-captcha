spring:
    application:
      name: shatding-springboot-mybatis
    shardingsphere:
      props:
        sql.show: true
      datasource:
        names: ds0,ds1
        # 数据源ds0
        ds0:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3307/test_order0?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
          username: root
          password: HSJissmart1
       # 数据源ds1
        ds1:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://localhost:3307/test_order1?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
          username: root
          password: HSJissmart1
      sharding:
          defaultDataSourceName: ds0
          tables:
            t_user:  #t_user表
              key-generator-column-name: id  #主键
              actual-data-nodes: ds${0..1}.t_user${0..1}    #数据节点,均匀分布
              database-strategy:   #分库策略
                inline: #行表达式
                  sharding-column: id        #列名称，多个列以逗号分隔
                  algorithm-expression: ds${id % 2}    #按模运算分配
              table-strategy:  #分表策略
                inline: #行表达式
                  sharding-column: id
                  algorithm-expression: t_user${id.intdiv(2) % 2} #5. inline表达式返回结果为何出现浮点数？回答：Java的整数相除结果是整数，但是对于inline表达式中的Groovy语法则不同，整数相除结果是浮点数。 想获得除法整数结果需要将A/B改为A.intdiv(B)。
                # standard: #用于单分片键的标准分片场景
                  # sharding-column: id
                  # precise-algorithm-class-name: com.example.shatding_springboot_mybatis_generator.util.MyPreciseShardingAlgorithm
                  # range-algorithm-class-name:  com.example.shatding_springboot_mybatis_generator.util.MyPreciseShardingAlgorithm
            t_address:
              key-generator-column-name: id
              actual-data-nodes: ds${0..1}.t_address
              database-strategy:
                inline:
                  sharding-column: id
                  algorithm-expression: ds${id % 2}